# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 


/*What are the top 10 songs based on popularity?*/

SELECT artist_name, track_name, popularity
    FROM BIT_DB.Spotifydata
    ORDER BY popularity DESC
    LIMIT 10;
    

/*What are the top 5 longest songs?*/

SELECT artist_name, track_name
    FROM BIT_DB.Spotifydata
    ORDER BY duration_ms DESC
    LIMIT 5;
    

/*Which artists have more than 1 song on the Top 50 list, and how many songs does each have?*/

SELECT artist_name, COUNT(artist_name)
    FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    HAVING COUNT(artist_name)>1
    ORDER BY COUNT(artist_name) DESC;
    

/*What are the 10 songs with the slowest tempo?*/

SELECT artist_name, track_name
    FROM BIT_DB.Spotifydata
    ORDER BY tempo ASC
    LIMIT 10;
    

/*What is the average danceability by artist?*/

SELECT artist_name, AVG(danceability)
    FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    ORDER BY AVG(danceability) DESC;
    

/*What are the top 10 most energetic songs?*/

SELECT artist_name, track_name
     FROM BIT_DB.Spotifydata
     ORDER BY energy DESC
     LIMIT 10;
 

/*How many songs are in each key?*/

SELECT song_key, COUNT(track_name)
    FROM BIT_DB.Spotifydata
    GROUP BY song_key;


/*Use a CTE to create a temporary table to calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.*/

WITH tempTable AS (
    SELECT s.artist_name, AVG(s.popularity) AS avg_pop
    FROM Spotifydata s
    GROUP BY s.artist_name
    )
    
SELECT artist_name , avg_pop, "Top Star" AS tag
    FROM tempTable
    WHERE avg_pop>=90;
    
